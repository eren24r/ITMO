plugins {
  id 'java'
  id 'application'
  id 'org.javamodularity.moduleplugin' version '1.8.12'
  id 'org.openjfx.javafxplugin' version '0.0.13'
  id 'org.beryx.jlink' version '2.25.0'
  id 'com.github.johnrengelman.shadow' version '8.0.0'
}

group 'ui'
version '1.0-SNAPSHOT'

repositories {
  mavenCentral()
}

shadowJar{

  mainClassName = 'ui.clientui.MainUI'
}

task customJar(type: Jar){
  manifest {
    attributes 'Main-Class':'ui.clientui.MainUI'
  }
  from {
    configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
  } with jar
}

ext {
  junitVersion = '5.9.2'
}

sourceCompatibility = '17'
targetCompatibility = '17'

application {
  mainModule = 'ui.clientui'
  mainClass = 'ui.clientui.MainUI'
}

javafx {
  version = '17.0.6'
  modules = ['javafx.controls', 'javafx.fxml', 'javafx.web', 'javafx.media']
}

dependencies {
  shadow localGroovy()
  shadow gradleApi()

  implementation 'com.fasterxml.jackson.core:jackson-databind:2.12.7.1'
  implementation 'org.fusesource.jansi:jansi:2.3.2'

  implementation('org.controlsfx:controlsfx:11.1.2')
  implementation('com.dlsc.formsfx:formsfx-core:11.6.0') {
    exclude(group: 'org.openjfx')
  }
  implementation('net.synedra:validatorfx:0.4.0') {
    exclude(group: 'org.openjfx')
  }
  implementation('org.kordamp.bootstrapfx:bootstrapfx-core:0.4.0')

  implementation('com.github.almasb:fxgl:17.2') {
    exclude(group: 'org.openjfx')
  }

  testImplementation("org.junit.jupiter:junit-jupiter-api:${junitVersion}")
  testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:${junitVersion}")
}

test {
  useJUnitPlatform()  }

jlink {
  imageZip = project.file("${buildDir}/distributions/app-${javafx.platform.classifier}.zip")
  options = ['--strip-debug', '--compress', '2', '--no-header-files', '--no-man-pages']
  launcher {
    name = 'app'
  }
}

jlinkZip {
  group = 'distribution'
}